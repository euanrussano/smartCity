# Generated by Django 3.1.4 on 2020-12-14 00:47

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('latitude', models.FloatField(default=0.0)),
                ('longitude', models.FloatField(default=0.0)),
                ('radius', models.FloatField(default=0.0)),
                ('account', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='iot.account')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(default=0.0)),
                ('longitude', models.FloatField(default=0.0)),
                ('status', models.CharField(choices=[('W', 'Working'), ('NW', 'Not Working'), ('UM', 'Under Maintenance')], default='W', max_length=2)),
                ('enabled', models.BooleanField(default=True)),
                ('account', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='iot.account')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='iot.city')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=datetime.datetime(2020, 12, 14, 0, 47, 1, 250795, tzinfo=utc), verbose_name='date created')),
                ('finish_date', models.DateTimeField(null=True, verbose_name='date finalized')),
            ],
        ),
        migrations.CreateModel(
            name='InputSensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.device')),
            ],
        ),
        migrations.CreateModel(
            name='OutputSensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.device')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.IntegerField(default=0)),
                ('longitude', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('inputsensor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.inputsensor')),
            ],
            bases=('iot.inputsensor',),
        ),
        migrations.CreateModel(
            name='CO2Meter',
            fields=[
                ('inputsensor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.inputsensor')),
            ],
            bases=('iot.inputsensor',),
        ),
        migrations.CreateModel(
            name='InformationKiosk',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.device')),
            ],
            bases=('iot.device',),
        ),
        migrations.CreateModel(
            name='Microphone',
            fields=[
                ('inputsensor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.inputsensor')),
            ],
            bases=('iot.inputsensor',),
        ),
        migrations.CreateModel(
            name='ParkingSpace',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.device')),
                ('fee', models.FloatField(default=0.0)),
            ],
            bases=('iot.device',),
        ),
        migrations.CreateModel(
            name='Robot',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.device')),
            ],
            bases=('iot.device',),
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('outputsensor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.outputsensor')),
                ('audioTranscript', models.CharField(max_length=200)),
            ],
            bases=('iot.outputsensor',),
        ),
        migrations.CreateModel(
            name='StreetLight',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.device')),
                ('brightness', models.FloatField(default=1.0)),
            ],
            bases=('iot.device',),
        ),
        migrations.CreateModel(
            name='StreetSign',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.device')),
                ('text', models.CharField(max_length=200)),
            ],
            bases=('iot.device',),
        ),
        migrations.CreateModel(
            name='Thermometer',
            fields=[
                ('inputsensor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.inputsensor')),
            ],
            bases=('iot.inputsensor',),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.device')),
                ('vehicleType', models.CharField(choices=[('B', 'Bus'), ('C', 'Car')], default='C', max_length=1)),
                ('maximumCapacity', models.IntegerField(default=1)),
                ('fee', models.FloatField(default=0.0)),
            ],
            bases=('iot.device',),
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.IntegerField(default=0)),
                ('longitude', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=12, null=True, validators=[django.core.validators.RegexValidator('^\\d{2}-\\d{4}-\\d{4}$')])),
                ('account', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='iot.account')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThermometerEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.event')),
                ('temperature', models.FloatField(default=0.0)),
                ('thermometer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.thermometer')),
            ],
            bases=('iot.event',),
        ),
        migrations.CreateModel(
            name='MicrophoneEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.event')),
                ('audioTranscript', models.CharField(max_length=200)),
                ('microphone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.microphone')),
            ],
            bases=('iot.event',),
        ),
        migrations.CreateModel(
            name='CO2Event',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.event')),
                ('co2Level', models.FloatField(default=0.0)),
                ('co2meter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.co2meter')),
            ],
            bases=('iot.event',),
        ),
        migrations.CreateModel(
            name='CameraEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='iot.event')),
                ('imageTranscript', models.CharField(max_length=200)),
                ('camera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='iot.camera')),
            ],
            bases=('iot.event',),
        ),
    ]
